#!/bin/sh

##
# asdf install favorites
#
# Install our favorite asdf plugin latest versions.
#
#
# ## Help
#
# List the plugins that are added:
#
#     asdf plugin list
#
# List what's install:
#
#     asdf list
#
# List the current installed versions:
#
#     asdf current
#
#
# ## Set versions
#
# Set the specific version you want to use via one of:
#
#     asdf global <name> <version> [<version>...]
#     asdf shell <name> <version> [<version>...]
#     asdf local <name> <version> [<version>...]
#
# Settings:
#
#   * `global`: write the version to $HOME/.tool-versions.
#
#   * `shell`: set the version to an environment variable named
#     ASDF_${LANG}_VERSION, for the current shell session only.
#
#   * `local`: writes the version to $PWD/.tool-versions, 
#     creating it if needed.
#
# To use the system version:
#
#     asdf local <name> system
#
##

## Programming languages
asdf plugin-add crystal https://github.com/asdf-community/asdf-crystal.git
asdf plugin-add dart https://github.com/patoconnor43/asdf-dart.git
asdf plugin add erlang https://github.com/asdf-vm/asdf-erlang.git
asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git
asdf plugin-add flutter https://github.com/oae/asdf-flutter.git
asdf plugin-add golang https://github.com/kennyp/asdf-golang.git
asdf plugin-add haskell https://github.com/vic/asdf-haskell.git
asdf plugin-add java https://github.com/halcyon/asdf-java.git
asdf plugin-add julia https://github.com/rkyleg/asdf-julia.git
asdf plugin-add kotlin https://github.com/asdf-community/asdf-kotlin.git
asdf plugin-add nodejs https://github.com/asdf-vm/asdf-nodejs
asdf plugin-add python https://github.com/danhper/asdf-python.git
asdf plugin-add ruby https://github.com/asdf-vm/asdf-ruby.git
asdf plugin-add R https://github.com/taiar/asdf-R.git
asdf plugin-add rust https://github.com/asdf-community/asdf-rust.git

# Postgres
#
# Updated 2022-07-04 for macOS 12.4 Monterey
#
# ## Configure
#
# The asdf plugin for Postgres provides configuration options via the
# env var POSTGRES_EXTRA_CONFIGURE_OPTIONS during the installation.
# We prefer to configure SSL and UUID.
#
# ## OpenSSL
#
# OpenSSL provides security libraries. 
#
#  * We want to be at least 1.1.
#
#  * We install openssl via brew.
#
# Install:
#
#     $ brew install openssl@1.1
#     $ brew --prefix openssl@1.1
#     /opt/homebrew/opt/openssl@1.1
#
# Configure via:
#
#     --with-openssl
#     --with-libraries=/opt/homebrew/opt/openssl@1.1/lib
#     --with-includes=/opt/homebrew/opt/openssl@1.1/include 
#
# ## UUID
#
# The uuid-ossp module generates universally unique identifiers (UUIDs).
#
# See https://www.postgresql.org/docs/current/uuid-ossp.html
#
# Historically this module depended on the OSSP UUID library, which accounts
# for the module's name. However, the library it is not well maintained, 
# and is becoming increasingly difficult to port to newer platforms.
#
# The uuid-ossp module can now be built without the OSSP library on some 
# platforms. On FreeBSD, NetBSD, and some other BSD-derived platforms, 
# suitable UUID creation functions are included in the core libc library. 
# On Linux, macOS, and some other platforms, suitable functions are provided 
# in the libuuid library, which originally came from the e2fsprogs project.
#
# Install (deprecated):
#
#     $ brew install ossp-uuid
#     $ brew --prefix ossp-uuid
#     /opt/homebrew/opt/ossp-uuid
#
# Configure via:
#
#     --with-uuid=e2fs
#
# ## Success
#
# A correct installation should look like this:
#
#     Success. You can now start the database server using:
#
#     ~/.asdf/installs/postgres/14.4/bin/pg_ctl -D ~/.asdf/installs/postgres/14.4/data -l logfile start
#
# Run:
#
#     waiting for server to start.... done
#     server started
#
# ## Helper
#
# To switch Postgres versions, you can try this script:
# https://gist.github.com/jbranchaud/3cda6be6e1dc69c6f55435a387018dac
#
# Our similar script:
#
# ```zsh
# function asdf_postgres_switch {
#     local new_version="$1"
#     local old_version=$(psql --no-psqlrc -t -c 'show server_version;' postgres | xargs)
#     if [ "$new_version" != "$old_version" ]; then
#         DIR="$HOME/.asdf/installs/postgres"
#         "$DIR/$old_version/bin/pg_ctl" -D "$DIR/$old_version/data" stop
#         "$DIR/$new_version/bin/pg_ctl" -D "$DIR/$new_version/data" start
#         asdf global postgres "$new_version"
#     fi
# }
# ```
#
brew install gcc readline zlib curl openssl@1.1
asdf plugin-add postgres
POSTGRES_EXTRA_CONFIGURE_OPTIONS="--with-openssl --with-uuid=e2fs --with-libraries=/usr/local/lib:/opt/homebrew/opt/openssl@1.1/lib --with-includes=/usr/local/include:/opt/homebrew/opt/openssl@1.1/include" asdf install postgres latest

## Tools
asdf plugin-add awscli https://github.com/MetricMike/asdf-awscli.git
asdf plugin-add bundler https://github.com/jonathanmorley/asdf-bundler.git
asdf plugin-add yarn https://github.com/twuni/asdf-yarn

## Hashicorp tools
asdf plugin-add boundary https://github.com/asdf-community/asdf-hashicorp.git
asdf plugin-add consul https://github.com/asdf-community/asdf-hashicorp.git
asdf plugin-add nomad https://github.com/asdf-community/asdf-hashicorp.git
asdf plugin-add packer https://github.com/asdf-community/asdf-hashicorp.git
asdf plugin-add sentinel https://github.com/asdf-community/asdf-hashicorp.git
asdf plugin-add serf https://github.com/asdf-community/asdf-hashicorp.git
asdf plugin-add terraform https://github.com/asdf-community/asdf-hashicorp.git
asdf plugin-add vault https://github.com/asdf-community/asdf-hashicorp.git
asdf plugin-add waypoint https://github.com/asdf-community/asdf-hashicorp.git

## Install
for x in $(asdf plugin list); do
    asdf install "$x" latest
    asdf global "$x" latest
done
